import 'package:flutter/material.dart';
import 'package:pmsn20252/utils/colors_app.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      home: ContadorPage(),
    );
  }
}

class ContadorPage extends StatefulWidget {
  const ContadorPage({super.key});

  @override
  State<ContadorPage> createState() => _ContadorPageState();
}

class _ContadorPageState extends State<ContadorPage> {
  int contador = 0;

  void miEvento() {
    print("Hola mundo");
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Práctica 1"),
        backgroundColor: Colors.blue,
      ),
      body: Container(
        alignment: Alignment.center,
        child: Text(
          "Contador: $contador",
          style: const TextStyle(
            fontSize: 24,
            fontFamily: 'PriceDown',
            color: ColorsApp.txtColor,
          ),
        ),
      ),
      floatingActionButton: FloatingActionButton(
        child: const Icon(Icons.ads_click),
        onPressed: () {
          setState(() {
            contador++;
          });
          print(contador);
        },
      ),
    );
  }
}

clase antes de ser factorizada a StatefulWidget 

import 'package:flutter/material.dart';
import 'package:pmsn20252/utils/colors_app.dart';

void main() => runApp(MyApp());

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      home: ContadorPage(),
    );
  }
}

class ContadorPage extends StatefulWidget {
  const ContadorPage({super.key});

  @override
  State<ContadorPage> createState() => _ContadorPageState();
}

class _ContadorPageState extends State<ContadorPage> {
  int contador = 0;

  void miEvento() {
    print("Hola mundo");
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Práctica 1", style: TextStyle(fontFamily: 'PriceDown', color: Color.fromARGB(255, 255, 255, 255))) ,
        backgroundColor: const Color.fromARGB(255, 0, 0, 0),
      ),
      body: Container(
        alignment: Alignment.center,
        child: Text(
          "Contador: $contador",
          style: const TextStyle(
            fontSize: 24,
            fontFamily: 'PriceDown',
            color: ColorsApp.txtColor,
          ),
        ),
      ),
      floatingActionButton: FloatingActionButton(
        child: const Icon(Icons.ads_click),
        onPressed: () {
          setState(() {
            contador++;
          });
          print(contador);
        },
      ),
    );
  }
}

Deberuias de usar un steifull cuando la app necesite renderizar la paguna en tiempo real
Cuando necesite cargar datos en segundo plano debes de usar un stafull
por ejemplo en un login es necesario, usar un staiful por que al momento de dar clicl en autenticar
se debe de mostrar una accion y se debe de hacer un accionn de autenticar esa accion no aparecio desde
el principio por ende es necesario que sea un stafull


los pasos para un value notifier

defnir la variable con su tipo dentro de la  clase  que vamos a estar monitoreandi
definir el buidder que ava a estar monitoreando la variable para reconstruir el widget
cambiar el valor de la variable